@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "AddPortfolio";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

@using (Html.BeginForm("AddPortfolio", "Portfolio", FormMethod.Post))
{
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Deneyim Ekleme Sayfası</h4>

                <div class="form-group">
                    <label for="Name">Ad</label>
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                </div>
    
    @Html.HiddenFor(x => x.PortfolioID)
    @Html.Label("Proje  Başlığı")
     
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor( x => x.Name )
 
    @Html.Label("Görsel 1 Bilgisi")
    <br />
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ImageUrl)

    @Html.Label("Görsel 2 bilgisi")
    <br />
    @Html.TextBoxFor(x => x.Image1, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Image1)

    @Html.Label("Proje Url")
    <br />
    @Html.TextBoxFor(x => x.Image2, new { @class = "form-control" })

    
    @Html.Label("Fiyat")
    <br />
    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
    

    @Html.Label("Tamamlanma Oranı")
    <br />
    @Html.TextBoxFor(x => x.Value, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Value)

    @Html.Label("Proje URL")
    <br />
    @Html.TextBoxFor(x => x.ProjectUrl, new { @class = "form-control" })

    <br />
    
    <button type="submit" class="btn btn-success">Yeni Proje Ekle</button>

            </div>
        </div>
    </div>
}

